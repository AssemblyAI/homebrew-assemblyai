# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.2"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.2/assemblyai_1.2_darwin_amd64.tar.gz"
      sha256 "86fa31af2b850e7e01dd0f239a35390126d0d81a60952e056d40890810ea8f00"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.2/assemblyai_1.2_darwin_arm64.tar.gz"
      sha256 "95ccae95bbd3e3cac5025c31f6d6ca7ec8da58bc41fd9c9dc205a0ec3876d8cd"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.2/assemblyai_1.2_linux_amd64.tar.gz"
      sha256 "f3836257267ccfa6382cfd93d5376cd9e2bfdadf5cb9ba93992a2720855ee3af"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.2/assemblyai_1.2_linux_arm64.tar.gz"
      sha256 "583f4290a86ce5196f75223e592c163ed29014c0093f0a8501b867b5ec050439"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.2/assemblyai_1.2_linux_armv6.tar.gz"
      sha256 "b3cc3329b961ad02dffa39f8c49dc97d41f48b6cfc1833faee34faa83aa31d5a"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
