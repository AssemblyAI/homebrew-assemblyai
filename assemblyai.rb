# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.11"
  license "Apache 2.0"

  on_macos do
    url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.11/assemblyai-cli_0.11_darwin_all.tar.gz"
    sha256 "84cc229990147070f9603cff081af2d76309596928dad0f7d74fb37de0b26fe2"

    def install
      bin.install "assemblyai-cli"
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.11/assemblyai-cli_0.11_linux_arm64.tar.gz"
      sha256 "c04ad8e0cdd7f532094267666adc41c0aabe810a0a21982ee569f096bbd516d6"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.11/assemblyai-cli_0.11_linux_amd64.tar.gz"
      sha256 "a6a298db86ac121e99aac665a75fa74651a03e62375d9c30ab3d083c37b721d6"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai-cli config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai-cli transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai-cli get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
