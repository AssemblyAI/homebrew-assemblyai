# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.33"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.33/assemblyai_0.33_darwin_arm64.tar.gz"
      sha256 "a17844b87d087bef5243279fa3ab1473ab1512e68edc82cccd525e22bfde7e26"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.33/assemblyai_0.33_darwin_amd64.tar.gz"
      sha256 "4f13b54a2289b7f7a81f577523a5152bb596e6b67727ed44c28a1e698001af3e"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.33/assemblyai_0.33_linux_amd64.tar.gz"
      sha256 "9344d78c8d992fb05c8c2d4f70d84e34ca3658b613ca1280c0b1f83e2da40c37"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.33/assemblyai_0.33_linux_armv6.tar.gz"
      sha256 "faac22fd91e8080815e4068e89e426cb79559b027114140c58159d745830d7ca"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.33/assemblyai_0.33_linux_arm64.tar.gz"
      sha256 "c3d95264028400d4da53553b9e03a6a15abeed0ebea22d04163f3c1f46ec04ba"

      def install
        bin.install "assemblyai"
      end
    end
  end

  def post_install
    system "assemblyai", "welcome", "-i", "-v=v0.33", "-m=brew"
    puts "Welcome to AssemblyAI CLI"
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
