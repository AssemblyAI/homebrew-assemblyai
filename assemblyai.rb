# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.30"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.30/assemblyai_0.30_darwin_amd64.tar.gz"
      sha256 "a8392f50a068eafb22f3e7abb99a413534106ac2ec0498e95a0180201f6679c5"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.30/assemblyai_0.30_darwin_arm64.tar.gz"
      sha256 "21cd6d6da56d1b7f3b2a7e0ada06a0c9743e282cf2548c08c1c24e5e3bb1f3c1"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.30/assemblyai_0.30_linux_amd64.tar.gz"
      sha256 "9bde006f49fdd02cfdad71e1367aa2fbe9598338c15e1b496d4763cd24715a19"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.30/assemblyai_0.30_linux_armv6.tar.gz"
      sha256 "4bb2f5b41ec20cf6431f9aeb168c5eafb830e459a52ef4b46c159712697cf478"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.30/assemblyai_0.30_linux_arm64.tar.gz"
      sha256 "b8e6e9ca5db3e1d7e54a44da4e2def6eed0144bcfb99e834db46ef923de54c06"

      def install
        bin.install "assemblyai"
      end
    end
  end

  def post_install
    etc.install system "assemblyai welcome -i -v=v0.30 -m=brew"
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
