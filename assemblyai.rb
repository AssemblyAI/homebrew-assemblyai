# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.6"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.6/assemblyai_1.6_darwin_arm64.tar.gz"
      sha256 "92f4a1801d21d5ac863d347ee8d0e7165bf576e774a67ba7e89f681b7c96b362"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.6/assemblyai_1.6_darwin_amd64.tar.gz"
      sha256 "99fd746ab429f4a31fea98b0948c2f781eef45a86d2c35f60242806efb35176e"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.6/assemblyai_1.6_linux_armv6.tar.gz"
      sha256 "691cab28bf516674f1045e68be783c26b3c7d6d67f4d0e373a7a45e37c668f3a"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.6/assemblyai_1.6_linux_amd64.tar.gz"
      sha256 "6dc567952d04bdb469a75ea0bb8396ae6231068bbdaecd08c0a83328f8df93b6"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.6/assemblyai_1.6_linux_arm64.tar.gz"
      sha256 "9587f7415e493f63b62de4650959e1eaf6778f8134ed7ceb6d80c2c1bcbcc96f"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
