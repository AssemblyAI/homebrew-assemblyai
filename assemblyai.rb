# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.1"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.1/assemblyai_1.1_darwin_amd64.tar.gz"
      sha256 "5a5c034e6d15d0a89ad8b47f70dc80fd51c2cf04c63d95e8fce4d88a03f40d7c"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.1/assemblyai_1.1_darwin_arm64.tar.gz"
      sha256 "237f293e46b50b2d13d28bae120319f6fda5d38f7819b0428197f11a8f26e01f"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.1/assemblyai_1.1_linux_amd64.tar.gz"
      sha256 "6b011e86f67a39a3d86d1cd5c3b4354115ba1986a182137ef07fb33497746488"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.1/assemblyai_1.1_linux_armv6.tar.gz"
      sha256 "1f4d80aaafac357afef5fd633f42a8ee27c3090fbc76be0bf410809b94a209c2"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.1/assemblyai_1.1_linux_arm64.tar.gz"
      sha256 "2a3428cd2d961012fd23b6da3621825050d3695196bea909569c40cd7129cb7a"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
