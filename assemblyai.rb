# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.9"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.9/assemblyai_1.9_darwin_amd64.tar.gz"
      sha256 "9b464d787a66661d6c3e0d8e32bacc5ce671935d6ca3d2febc95732ac2466cf0"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.9/assemblyai_1.9_darwin_arm64.tar.gz"
      sha256 "a8eb3e6d82949b3f25270c565f380018fb4ca34028117a6cca9313d77923265e"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.9/assemblyai_1.9_linux_arm64.tar.gz"
      sha256 "d0b4be39548c21fae8d62a50a9c5cb7e3504d6240b4813ea085ee78127be38d8"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.9/assemblyai_1.9_linux_amd64.tar.gz"
      sha256 "cadb58959f6483f9249f28ae9f22059f6a0c5be49b8da3d9f22d84c08c7d8827"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.9/assemblyai_1.9_linux_armv6.tar.gz"
      sha256 "c8026a2b93735626f1529f81ff83ac627f38249c7b3b2e00a4ec1d82094dc473"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
