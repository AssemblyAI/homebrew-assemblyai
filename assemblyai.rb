# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.0"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.0/assemblyai_1.0_darwin_amd64.tar.gz"
      sha256 "ff46115a96def4cb78ad8cff52fc1f9299c44c4846a5c81a4c425b877d62e57a"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.0/assemblyai_1.0_darwin_arm64.tar.gz"
      sha256 "7904791a5946b2644d6e921a86592fdf2ebc5017773512dac316a509186b281e"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.0/assemblyai_1.0_linux_arm64.tar.gz"
      sha256 "8fcde0390b6228f75415cb1f53cd327ab803b20931c4a3581390d1d58f6bd4ac"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.0/assemblyai_1.0_linux_amd64.tar.gz"
      sha256 "7d456b564fe738619f7bc4a260d830f670f40a9ad0b297eee842062b75b6729a"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.0/assemblyai_1.0_linux_armv6.tar.gz"
      sha256 "66f1d33681fdc7759d03846accd5324c647ea49fbd7f5b70b38128a6cc010d73"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
