# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.14"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.14/assemblyai_1.14_darwin_amd64.tar.gz"
      sha256 "0fbef1dae8dc073e2cc70efaa5599ea0be03f20393bea1b0d9e2f160b399f75c"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.14/assemblyai_1.14_darwin_arm64.tar.gz"
      sha256 "335886080a6568ada5e1468465d51ee0ba59d87e4e3e8b9642f32551dc783278"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.14/assemblyai_1.14_linux_amd64.tar.gz"
      sha256 "0062ae50656b9914274cb37fbaa003a75a933274b30ffbc1583c9331f35e4ee4"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.14/assemblyai_1.14_linux_armv6.tar.gz"
      sha256 "6ef3750772525bc595364722ee7ae74321d25eff8424be14aec0f8c035c7de0e"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.14/assemblyai_1.14_linux_arm64.tar.gz"
      sha256 "de866dc35081f5954dea1da7bdc8e2ae6b66e897070ebb66e1d1333c270fc0ce"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
