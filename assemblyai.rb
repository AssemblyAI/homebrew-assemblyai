# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.27"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.27/assemblyai_0.27_darwin_amd64.tar.gz"
      sha256 "a8c4d3ff93428ced590ca40c4bb843adfeeacfb6ebc125a69a216390580111dd"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.27/assemblyai_0.27_darwin_arm64.tar.gz"
      sha256 "9ab95bb70a424938c65e0686f4e837203a09158489926f9cc42c001b8498a05c"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.27/assemblyai_0.27_linux_amd64.tar.gz"
      sha256 "c40989ffb4cb863e4361646eff8c83524a2d4e4568d2edd77860a271188a7bb9"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.27/assemblyai_0.27_linux_armv6.tar.gz"
      sha256 "3bde80ef3cdf48c2c96b8c5be27e6aeaa2e254b43f673a9672e3523fb1f9b432"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.27/assemblyai_0.27_linux_arm64.tar.gz"
      sha256 "79d5b8e4a8b189e75e29895b1630a88313805ad735b062c453f4a23b3a7e0ac1"

      def install
        bin.install "assemblyai"
      end
    end
  end

  def post_install
    etc.install system("assemblyai welcome -i -v={{ .Tag }} -m=brew")
  end

  test do
    output = shell_output("#{bin}/assemblyai-cli config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai-cli transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai-cli get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
