# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.3"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.3/assemblyai_1.3_darwin_amd64.tar.gz"
      sha256 "32620ea7e52bd6fbba9c73a1471c85e0878f081b5dd44836284c18ccc358a577"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.3/assemblyai_1.3_darwin_arm64.tar.gz"
      sha256 "1ef0ef5ad384007d4690d8d03a4cb6dcf6c74c6e561ad4d56e888affd046accf"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.3/assemblyai_1.3_linux_amd64.tar.gz"
      sha256 "712dad4b9288ebad2a01522da2b7a728ea25fbaaf0c120e5751046fc7903819e"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.3/assemblyai_1.3_linux_armv6.tar.gz"
      sha256 "531c98788877a3b27f565fa402e865b5a9c343e33265c6e2618684378982615a"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.3/assemblyai_1.3_linux_arm64.tar.gz"
      sha256 "ad215ab668eeb31e54c487203bc0adf50678922bd6e21d79fbd44bdf8381d000"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
