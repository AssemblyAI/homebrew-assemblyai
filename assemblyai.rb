# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.35"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.35/assemblyai_0.35_darwin_arm64.tar.gz"
      sha256 "4b9a6fbc909158e9f9e6b8a858683768a0e0e6ec62e3a3c75a0537205bde1990"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.35/assemblyai_0.35_darwin_amd64.tar.gz"
      sha256 "08b53073bc0fd5eda0586ed41c8fea8a6dd7660518368ca2259a6f9c67b963c9"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.35/assemblyai_0.35_linux_armv6.tar.gz"
      sha256 "f7118311a2e3974d6f57f345eb75ea70d29c832653c0626edcfe6d5bec8dd2de"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.35/assemblyai_0.35_linux_arm64.tar.gz"
      sha256 "892d21b87ff4b77cab6b82574051d021c4ff84ab98325d36e0269404725a8595"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.35/assemblyai_0.35_linux_amd64.tar.gz"
      sha256 "734795bdba97ccb0181ddf08ec5ebaa3c68ca31a76e6f6b0c74caaddd0e5c39a"

      def install
        bin.install "assemblyai"
      end
    end
  end

  def post_install
    etc.install puts "Welcome to AssemblyAI CLI"
    system "assemblyai", "welcome", "-i", "-v=v0.35", "-m=brew"
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
