# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.31"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.31/assemblyai_0.31_darwin_arm64.tar.gz"
      sha256 "d9467ecf1eb47b470485ce25c229fab36e51c26d5850c1e3ebd75ce94ea91289"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.31/assemblyai_0.31_darwin_amd64.tar.gz"
      sha256 "145761d78e0e0532df71f574801c346c4f7371c61a008c1b19e2fd9b12b2df3f"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.31/assemblyai_0.31_linux_arm64.tar.gz"
      sha256 "318f1efdb45777d580a474e845ef896b967e5f81c302b5d5041ff447b42ef722"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.31/assemblyai_0.31_linux_armv6.tar.gz"
      sha256 "46d189f604b312b75d58bcc4e4f926aa21a90e5dc9b2b9799578828338d33655"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.31/assemblyai_0.31_linux_amd64.tar.gz"
      sha256 "ef17a94d5fde2276daad533b74da27cc839c0ccd6a4423dbf4b746697c3b5f53"

      def install
        bin.install "assemblyai"
      end
    end
  end

  def post_install
    etc.install system("assemblyai welcome -i -v=v0.31 -m=brew")
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
