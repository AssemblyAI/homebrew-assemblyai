# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.5"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.5/assemblyai_1.5_darwin_amd64.tar.gz"
      sha256 "1c07dbc2e0000e93fd40187b52de43b206a1e8ef35001482c2398e81445cf47c"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.5/assemblyai_1.5_darwin_arm64.tar.gz"
      sha256 "a8a6e6ee56ef704ea813624ed7286d9f0f2123dd5f3020c20cb11c3c56a67059"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.5/assemblyai_1.5_linux_armv6.tar.gz"
      sha256 "0b1134a50c5bd991c023564348012680f76d1bdbe8364b10ae3bf9ed9f4e5b43"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.5/assemblyai_1.5_linux_amd64.tar.gz"
      sha256 "d9efff2e3f9f91fe3ad2b77772525ce0193f230a60792f73173db7bb6e14a32e"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.5/assemblyai_1.5_linux_arm64.tar.gz"
      sha256 "e42e8467dd5ac9d7f64bb969296d2ae2397cc5d192ed89ee9b9b7cc4ebf012f4"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
