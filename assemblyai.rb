# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.12"
  license "Apache 2.0"

  on_macos do
    url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.12/assemblyai_0.12_darwin_all.tar.gz"
    sha256 "40a8afe4c313cd935c0612e820425fc708eb1f6f6a9a8742325e8a30c685a517"

    def install
      bin.install "assemblyai"
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.12/assemblyai_0.12_linux_arm64.tar.gz"
      sha256 "06d7cde5a4935d28346f019f39f69dd5e00f33771551b11e48916cc35a3ac02d"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.12/assemblyai_0.12_linux_amd64.tar.gz"
      sha256 "39111fcc625b66691ef66e2ae48bf4f2bde180c059c988be4ea88179cd0c3808"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai-cli config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai-cli transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai-cli get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
