# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.4"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.4/assemblyai_1.4_darwin_amd64.tar.gz"
      sha256 "b394b13bb55bf4cacceb694042788340a6c4ab7340a8949d234dae8ccf03eacc"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.4/assemblyai_1.4_darwin_arm64.tar.gz"
      sha256 "3c56269b647207808cb5a848cb07621c4991146b3e19887d05da6648939f8730"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.4/assemblyai_1.4_linux_armv6.tar.gz"
      sha256 "f72b83199d983e293ac32f84f129e20807316d314d74f6ff8e6ae21eea94c142"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.4/assemblyai_1.4_linux_arm64.tar.gz"
      sha256 "c166084f317fcd089095196412ccd756b2fc1a4c01e1e7fa4dc9308deb1c0df8"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.4/assemblyai_1.4_linux_amd64.tar.gz"
      sha256 "7344a888e8fe422a82345ddba8a26aa4a6e602847468b17491c865b6eff3f375"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
