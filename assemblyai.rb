# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.32"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.32/assemblyai_0.32_darwin_amd64.tar.gz"
      sha256 "dc6ad4974ae52a4c1a565e5c167d0166828c06d706b5970861d7d9bfbf9b392b"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.32/assemblyai_0.32_darwin_arm64.tar.gz"
      sha256 "c61f759bd6836975f4c1a0a6592b9311f1cee49d1359746ecbd913223bcea149"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.32/assemblyai_0.32_linux_arm64.tar.gz"
      sha256 "16e49adbbc9ad4f0ab48bb5b01fa5b9929f724f9653892e4fcb47805880abd09"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.32/assemblyai_0.32_linux_amd64.tar.gz"
      sha256 "b6534670e9e1d1115c57d11996f2841b83438a7fe814cab7afea8c357b29ebf2"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.32/assemblyai_0.32_linux_armv6.tar.gz"
      sha256 "1644ad71a29f9c42b990f47b50824bb474d060df10d45c4874a7494633e08870"

      def install
        bin.install "assemblyai"
      end
    end
  end

  def post_install
    etc.install system "assemblyai", "welcome", "-i", "-v=v0.32 -m=brew"
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
