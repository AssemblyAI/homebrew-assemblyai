# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "1.7"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.7/assemblyai_1.7_darwin_amd64.tar.gz"
      sha256 "015e76c009f595edc0f1a18c64c20638a998dba7d97955a989e041a30110e226"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.7/assemblyai_1.7_darwin_arm64.tar.gz"
      sha256 "41b15ad11da02f8d571f001da73903d78053068dbf6ff5e6df37a74d219d748c"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.7/assemblyai_1.7_linux_armv6.tar.gz"
      sha256 "966f53bcfb76453aeab0fc607bf05a1ff979bd77a690537634023ba99fb23dbf"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.7/assemblyai_1.7_linux_arm64.tar.gz"
      sha256 "8a27f3d5681ec1f5d822061e5a6ba700db3c1200222ca20a2a182ef507183b5f"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v1.7/assemblyai_1.7_linux_amd64.tar.gz"
      sha256 "b973f6e0682d0d77f8a1c0f67c6050cf416f000b687e325861319167bb7226f5"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
