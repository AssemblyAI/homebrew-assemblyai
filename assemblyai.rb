# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Assemblyai < Formula
  desc "A quick and easy way to test assemblyAI's transcription features on your terminal"
  homepage "https://www.assemblyai.com/"
  version "0.36"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.36/assemblyai_0.36_darwin_arm64.tar.gz"
      sha256 "4e265d5576f0cdcad6aed75db68f462b335b81d36c71a623f3700f90c920c607"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.36/assemblyai_0.36_darwin_amd64.tar.gz"
      sha256 "6b0a3516345da29ca7f8b6ad923e61ba74504f756003023e092738b79086f559"

      def install
        bin.install "assemblyai"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.36/assemblyai_0.36_linux_amd64.tar.gz"
      sha256 "37a4f08c7056701350c2da00393e33b29cff9d8c429ed27aaf7b27e11e09593d"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.36/assemblyai_0.36_linux_armv6.tar.gz"
      sha256 "0eafa2ed4072ef0d761459b637fe4d026fede2b99d17c270d4f18886ad2ac246"

      def install
        bin.install "assemblyai"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/AssemblyAI/assemblyai-cli/releases/download/v0.36/assemblyai_0.36_linux_arm64.tar.gz"
      sha256 "bdc8b6a48dc9acbb2e48adab5368964625f1f9108e3eb198868168af118f36db"

      def install
        bin.install "assemblyai"
      end
    end
  end

  test do
    output = shell_output("#{bin}/assemblyai config 1234567890")
    expected = "Invalid token. Try again, and if the problem persists, contact support at support@assemblyai.com"
    assert_match expected, output

    output = shell_output("#{bin}/assemblyai transcribe 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output

    output = shell_output("#{bin}/assemblyai get 1234567890")
    assert_match "You must login first. Run `assemblyai config <token>`\n", output
  end
end
